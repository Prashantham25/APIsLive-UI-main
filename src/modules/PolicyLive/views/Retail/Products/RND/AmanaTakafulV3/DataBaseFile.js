const getDynamicPage = () => ({
  steps: [
    { name: "Plan Details", visible: true },
    { name: "Member Details", visible: true },
    { name: "Premium Details", visible: true },
    { name: "Certificate Details", visible: true },
  ],
  accordions: [
    [
      { name: "", visible: true },
      { name: "Master Policy Details", visible: true },
    ],
    [
      { name: "Policy Details", visible: true },
      { name: "Proposer Details", visible: true },
      { name: "Member Details", visible: true },
      { name: "Nominee Details", visible: true },
    ],
    [{ name: "", visible: true }],
    [{ name: "", visible: true }],
  ],
  components: [
    [
      [
        {
          type: "Input",
          visible: true,
          label: "Master Policy No",
          path: "PartnerDetails.masterPolicyNo",
          required: true,
        },
        {
          type: "ValidationControl",
          subType: "Button",

          visible: "visibleDetails",
          visibleDetails: {
            path: "PartnerDetails.masterPolicyNo",
            value: "",
            operator: "!==",
          },
          label: "Search",
          onClick: "onSearchMasterPolicy",
          validationId: 1,
        },
      ],
      [
        {
          type: "Input",
          visible: true,
          label: "Master Policy Holder Name",
          disabled: true,
          path: "PartnerDetails.partnerName",
        },
        {
          type: "MDDatePicker",
          visible: true,
          label: "Master Policy Start Date",
          path: "PartnerDetails.PolicyStartDate",
          disabled: true,
          dateFormat: "Y-m-d",
        },
        {
          type: "MDDatePicker",
          visible: true,
          label: "Master Policy End Date",
          path: "PartnerDetails.PolicyEndDate",
          disabled: true,
          dateFormat: "Y-m-d",
        },
        {
          type: "Input",
          visible: true,
          label: "Website",
          disabled: true,
          path: "PartnerDetails.website",
        },
        {
          type: "Input",
          visible: true,
          label: "Address 1",
          disabled: true,
          path: "PartnerDetails.address1",
        },
        {
          type: "Input",
          visible: true,
          label: "Address 2",
          disabled: true,
          path: "PartnerDetails.address2",
        },
        {
          type: "Input",
          visible: true,
          label: "City",
          disabled: true,
          path: "PartnerDetails.city",
        },
        {
          type: "Input",
          visible: true,
          label: "City",
          disabled: true,
          path: "PartnerDetails.district",
        },
        {
          type: "Input",
          visible: true,
          label: "State",
          disabled: true,
          path: "PartnerDetails.state",
        },
        {
          type: "Input",
          visible: true,
          label: "Country",
          disabled: true,
          path: "PartnerDetails.country",
        },
        {
          type: "Input",
          visible: true,
          label: "Pincode",
          disabled: true,
          path: "PartnerDetails.pincode",
        },
        { type: "Typography", visible: true, label: "", spacing: 12 },
        {
          type: "Input",
          visible: true,
          required: true,
          label: "Sum Insured",
          path: "SumInsured",
          onChangeFuncs: ["IsNumeric"],
          validationId: 2,
        },
        {
          type: "ValidationControl",
          subType: "AutoComplete",
          visible: true,
          required: true,
          label: "Select Plan",
          options: "plans",
          path: "Scheme",
          customOnChange: "onPlanSelect",
          validationId: 2,
        },
      ],
    ],
    [
      [
        {
          type: "Input",
          visible: true,
          required: true,
          label: "Policy Tenure",
          path: "PolicyTenure",
        },

        {
          type: "MDDatePicker",
          visible: true,
          required: true,
          label: "Policy Start Date",
          path: "PolicyStartDate",
          dateFormat: "Y-m-d",
          allowInput: true,
        },
        {
          type: "MDDatePicker",
          visible: true,
          label: "Policy End Date",
          path: "PolicyEndDate",
          dateFormat: "Y-m-d",
        },
        {
          type: "AutoComplete",
          visible: true,
          required: true,
          label: "Count of Lives",
          path: "CountofLives",
          options: [
            { mID: 1, mValue: "1" },
            { mID: 2, mValue: "2" },
            { mID: 3, mValue: "3" },
            { mID: 4, mValue: "4" },
            { mID: 5, mValue: "5" },
            { mID: 6, mValue: "6" },
          ],
        },
      ],
      [
        {
          type: "Input",
          visible: true,
          required: true,
          label: "Name",
          path: "ProposerDetails.Name",
        },
        {
          type: "MDDatePicker",
          visible: true,
          required: true,
          label: "Date of Birth",
          path: "ProposerDetails.DOB",
          dateFormat: "Y-m-d",
          isDOB: true,
          DOBpath: "ProposerDetails.Age",
        },
        {
          type: "Input",
          visible: true,
          label: "Age",
          path: "ProposerDetails.Age",
          disabled: true,
        },
        {
          type: "AutoComplete",
          visible: true,
          required: true,
          label: "Gender",
          path: "ProposerDetails.Gender",
          options: "Gender",
        },
        {
          type: "Input",
          visible: true,
          required: true,
          label: "Email ID",
          path: "ProposerDetails.EmailId",
        },
        {
          type: "Input",
          visible: true,
          required: true,
          label: "Mobile No",
          path: "ProposerDetails.MobileNo",
        },
        {
          type: "Input",
          visible: true,
          label: "Address 1",
          required: true,
          path: "ProposerDetails.PermanentAddress.AddressLine1",
        },
        {
          type: "Input",
          visible: true,
          label: "Address 2",
          path: "ProposerDetails.PermanentAddress.AddressLine2",
        },

        {
          type: "AutoComplete",
          visible: true,
          label: "Country",
          required: true,
          path: "ProposerDetails.PermanentAddress.Country",
          options: "country",
        },
        {
          type: "AutoComplete",
          visible: true,
          label: "State",
          required: true,
          path: "ProposerDetails.PermanentAddress.State",
          options: "state",
        },
        {
          type: "AutoComplete",
          visible: true,
          label: "District",
          required: true,
          path: "ProposerDetails.PermanentAddress.District",
          options: "district",
        },
        {
          type: "AutoComplete",
          visible: true,
          label: "City",
          required: true,
          path: "ProposerDetails.PermanentAddress.City",
          options: "city",
        },
        {
          type: "AutoComplete",
          visible: true,
          label: "Pincode",
          required: true,
          path: "ProposerDetails.PermanentAddress.Pincode",
          options: "pincode",
        },
      ],

      [
        {
          type: "Mapper1",
          visible: true,
          spacing: 12,
          path: "InsurableItem.0.RiskItems",
          mapperComponents: [
            {
              type: "Typography",
              visible: true,

              spacing: 12,
              label: "Member {index}",
            },
            { type: "Input", visible: true, required: true, label: "Name", path: "Name" },
            {
              type: "MDDatePicker",
              visible: true,
              required: true,
              label: "Date of Birth",
              path: "DOB",
              dateFormat: "Y-m-d",
            },
            { type: "Input", visible: true, disabled: true, label: "Age", path: "Age" },
            {
              type: "AutoComplete",
              visible: true,
              required: true,
              label: "Gender",
              path: "Gender",
              options: "Gender",
            },
            {
              type: "AutoComplete",
              visible: true,
              required: true,
              label: "Relationship",
              path: "Relationship",
              options: "relationShip",
            },
          ],
        },
      ],
      [
        {
          type: "Input",
          visible: true,
          required: true,
          label: "Nominee Name",
          path: "NomineeDetails.0.NomineeName",
        },
        {
          type: "MDDatePicker",
          visible: true,
          required: true,
          label: "Nominee Date of Birth",
          path: "NomineeDetails.0.NomineeDOB",
        },
        {
          type: "AutoComplete",
          visible: true,
          required: true,
          label: "Nominee Relationship",
          path: "NomineeDetails.0.NomineeRelationWithProposer",
          options: "relationShip",
        },
        {
          type: "Input",
          visible: true,
          required: true,
          label: "Appointee Name",
          path: "NomineeDetails.0.AppointeeName",
        },
        {
          type: "MDDatePicker",
          visible: true,
          required: true,
          label: "Appointee Date of Birth",
          path: "NomineeDetails.0.AppointeeDOB",
        },
        {
          type: "AutoComplete",
          visible: true,
          required: true,

          label: "Appointee Relationship",
          path: "NomineeDetails.0.AppointeeRelationWithProposer",
          options: "relationShip",
        },
      ],
    ],
    [[]],
    [[]],
  ],
  buttonDetails: [
    {
      prev: { label: "Previous", visible: false },
      reset: { label: "Reset", visible: true },
      button1: { label: "Addition Btn", visible: true },
      next: { label: "Proceed", visible: true, loader: "backDrop" },
    },
    {
      prev: { label: "Previous", visible: true },
      reset: { label: "Reset", visible: true },
      next: { label: "Proceed", visible: true, loader: "backDrop" },
    },
    {
      prev: { label: "Previous", visible: true },
      reset: { label: "Reset", visible: true },
      next: { label: "Proceed", visible: true, loader: "backDrop" },
    },
    {
      prev: { label: "Previous", visible: true },
      reset: { label: "Reset", visible: true },
      next: { label: "Proceed", visible: true, loader: "backDrop" },
    },
  ],
});

const getDynamicFunctionality = () => ({
  variables: {
    Salutation: [],
    Gender: [],
    plans: [],
    benefits: [],
    country: [],
    state: [],
    district: [],
    city: [],
    pincode: [],
  },

  onPageLoad: {
    masters: [
      {
        method: "get",
        url: "Organization/GetLocationAsync?locationType=Country&parentID=0",
        whereToBind: "variables",
        PathsToBind: [{ from: "", to: "country" }],
      },
      {
        method: "get",
        url: "Partner/GetPlanOnMasterPolicy?policyId=811&GroupType=105",
        whereToBind: "variables",
        PathsToBind: [{ from: "", to: "plans" }],
      },
    ],
  },

  onProceedButton: [
    [{}, {}],
    [{}, {}],
    [{}, {}],
    [{}, {}],
  ],

  onSearchMasterPolicy: [
    {
      method: "get",
      url: "Partner/GetAssignProductByMasterPolicyNumber?masterPolicyNo={P1}",
      parameters: [{ from: "json", path: "PartnerDetails.masterPolicyNo" }],
      whereToBind: "json",
      PathsToBind: [
        { from: "finalResult.0.agentId", to: "PartnerDetails.partnerCode" },
        { from: "finalResult.0.partnerName", to: "PartnerDetails.partnerName" },
        { from: "finalResult.0.policyStartDate", to: "PartnerDetails.PolicyStartDate" },
      ],
    },
    {
      method: "get",
      url: "Partner/GetAssignProductByMasterPolicyNumber?masterPolicyNo={P1}",
      parameters: [{ from: "json", path: "PartnerDetails.masterPolicyNo" }],
      whereToBind: "json",
      PathsToBind: [
        { from: "finalResult.0.agentId", to: "PartnerDetails.partnerCode" },
        { from: "finalResult.0.partnerName", to: "PartnerDetails.partnerName" },
        { from: "finalResult.0.policyStartDate", to: "PartnerDetails.PolicyStartDate" },
      ],
    },
  ],

  onPlanSelect: {
    method: "post",
    url: "Product/GetBenefitDetails",
    requestObj: {
      productCode: "AmanaTakaful02",
      planType: "",
      filterCriteria: [{ SI: "", Type: "", Region: "", currency: "" }],
      isFilterMemberWise: false,
      setBenefitMemberWise: false,
      insurableItems: null,
    },
    setRequestObj: [
      { from: "Scheme", to: "planType" },
      { from: "SumInsured", to: "filterCriteria.0.SI" },
    ],
    whereToBind: "json",
    PathsToBind: [{ from: "Benefits", to: "finalResult.benefits" }],
  },
});

export { getDynamicPage, getDynamicFunctionality };
